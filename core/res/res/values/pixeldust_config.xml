<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (C) 2019 The PixelDust Project

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<resources>
    <!-- The list of components which should be automatically disabled. -->
    <string-array name="config_disabledComponents" translatable="false">
    </string-array>

    <!-- The list of components which should be forced to be enabled. -->
    <string-array name="config_forceEnabledComponents" translatable="false">
    </string-array>

    <!-- Whether to show emergency button in power menu -->
    <bool name="config_showEmergencyButtonInPowerMenu">false</bool>

    <!-- Weather default unit
         0 - Celsius
         1 - Fahrenheit -->
    <integer name="weather_lockscreen_default_unit">0</integer>

    <!-- Hardware keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">64</integer>

    <!-- Full screen aspect ratio -->
    <bool name="config_haveHigherAspectRatioScreen">false</bool>
    <item name="config_screenAspectRatio" format="float" type="dimen">2.1</item>

    <!-- Wallpaper component -->
    <string name="default_wallpaper_component_custom" translatable="false">@null</string>

    <!-- True if the notification's dynamic app icon/title tint should be optimised for dark
    backgrounds (requires config_allowNotificationIconTextTinting to be true)-->
    <bool name="config_useDarkBgNotificationIconTextTinting">false</bool>
    <bool name="config_useDarkBgNotificationTinting_override">false</bool>
    <bool name="config_notificationTinting_override">false</bool>

    <!-- True if the notifications should dynamically tint the app icon and app title -->
    <bool name="config_allowNotificationIconTextTinting">true</bool>

    <!-- True if the notifications should tint the app name with the dynamic or the accent color -->
    <bool name="config_allowNotificationAppNameTextTinting">false</bool>

    <!-- Time to give to the proximity sensor before toggling the flashlight with the Power button.
    Set to -1 to disable the proximity sensor check at all-->
    <integer name="config_flashlightProximityTimeout">300</integer>

    <!-- Whether auto face unlock is enabled by default -->
    <bool name="config_face_unlock_enabled_by_default">false</bool>

    <!-- Whether device ignores the RSSNR signal implementation -->
    <bool name="config_ignoreRssnrSignalLevel">false</bool>

    <!-- Pocket Lock -->
    <bool name="config_pocketModeSupported">true</bool>

    <!-- Whether device has a physical display cutout -->
    <bool name="config_physicalDisplayCutout">false</bool>

    <!-- The list of vendor package signatures that should also be considered
       platform signatures, specifically for use on devices with a vendor partition. -->
    <string-array name="config_vendorPlatformSignatures">
    </string-array>

    <!-- All the capabilities of the LEDs on this device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following capabilities present:
         LIGHTS_RGB_NOTIFICATION_LED = 1
         LIGHTS_RGB_BATTERY_LED = 2
         LIGHTS_MULTIPLE_NOTIFICATION_LED = 4 (deprecated)
         LIGHTS_PULSATING_LED = 8
         LIGHTS_SEGMENTED_BATTERY_LED = 16
         LIGHTS_ADJUSTABLE_NOTIFICATION_LED_BRIGHTNESS = 32
         LIGHTS_BATTERY_LED = 64
         For example, a device with notification and battery lights that supports
         pulsating and RGB control would set this config to 75. -->
    <integer name="config_deviceLightCapabilities">8</integer>

    <!-- Default values for LiveDisplay -->
    <integer name="config_dayColorTemperature">6500</integer>
    <integer name="config_nightColorTemperature">4800</integer>
    <integer name="config_outdoorAmbientLux">12000</integer>
    <integer name="config_outdoorAmbientLuxHysteresis">1500</integer>
    <integer name="config_defaultLiveDisplayMode">0</integer>

    <!-- These values should map to the true min and max
         that the backend is capable of adjusting to. This
         is more important when using the ColorBalance mode,
         as the discrete adjustment is interpolated between
         this range (with config_dayColorTemperature at zero) -->
    <integer name="config_minColorTemperature">1000</integer>
    <integer name="config_maxColorTemperature">10000</integer>

    <bool name="config_defaultAutoContrast">false</bool>
    <bool name="config_defaultAutoOutdoorMode">true</bool>
    <bool name="config_defaultColorEnhancement">true</bool>
    <bool name="config_defaultCABC">true</bool>

    <!-- Display mode remapping table.
         If the mode names returned by the backend do not match
         the predefined and translated strings in the Settings
         app, they can be remapped here. The format is
         "oldname:newname", one per entry. -->
    <string-array name="config_displayModeMappings" translatable="false">
    </string-array>

    <!-- Should we filter any display modes which are unampped? -->
    <bool name="config_filterDisplayModes">false</bool>

    <integer name="config_buttonBrightnessSettingDefault">255</integer>
    <bool name="config_deviceHasVariableButtonBrightness">false</bool>

    <!-- Duration of the boost in seconds -->
    <integer name="onbootboost_duration">30</integer>
    <!-- Boost parameters which get passed to QPerformance -->
    <integer-array name="onbootboost_param_value"/>
    
    <!-- Boost parameters which get passed to QPerformance -->
    <integer-array name="qboost_strong_param_value"/>
    <integer-array name="qboost_weak_param_value"/>

    <!-- Defines the length of FP unlock boost -->
    <integer name="fpunlockboost_duration">700</integer>
</resources>
